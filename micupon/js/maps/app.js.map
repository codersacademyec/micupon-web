{"version":3,"sources":["globalService.js","main.js"],"names":["globalService","$http","manageSuccess","response","dismissWait","successMessage","showNot","data","manageError","a","b","status","location","href","msg","doGet","url","showWait","get","then","doPost","post","text","blockActions","waiting","loadText","isWaiting","loadingText","isBlocked","service","wait","$","angular","module","constant","factory","$q","currentUser","def","defer","Stamplay","User","undefined","user","resolve","error","reject","promise","config","$httpProvider","defaults","headers"],"mappings":"AAEA,QAAAA,eAAAC,GAYA,QAAAC,GAAAC,GAGA,MAFAC,KACA,IAAAC,GAAAC,QAAAD,EAAA,WACAF,EAAAI,KAEA,QAAAC,GAAAL,EAAAM,EAAAC,GAEA,GADAN,IACA,KAAAD,EAAAQ,OAAA,CACA,GAAA,KAAAR,EAAAQ,OAGA,MAFAC,UAAAC,KAAA,aACAT,IAGA,IAAAU,EAEAA,GADA,KAAAX,EAAAQ,OACAR,EAAAI,KAEA,+BAEAD,QAAAQ,EAAA,WAGA,QAAAC,GAAAC,EAAAF,EAAAT,GAIA,MAHAY,GAAAH,EAAAA,EAAA,iBACAT,EAAA,GACAA,IAAAA,EAAAA,GACAJ,EAAAiB,IAAAF,GAAAG,KAAAjB,EAAAM,GAEA,QAAAY,GAAAJ,EAAAT,EAAAO,EAAAT,GAIA,MAHAY,GAAAH,EAAAA,EAAA,iBACAT,EAAA,GACAA,IAAAA,EAAAA,GACAJ,EAAAoB,KAAAL,EAAAT,GAAAY,KAAAjB,EAAAM,GAGA,QAAAS,GAAAK,GACAC,GAAA,EACAC,GAAA,EACAC,EAAAH,EAGA,QAAAlB,KACAoB,GAAA,EACAD,GAAA,EAEA,QAAAG,KACA,MAAAF,GAEA,QAAAG,KACA,MAAAF,GAEA,QAAAG,KACA,MAAAL,GA/DA,GAAAlB,GAAA,GACAoB,EAAA,GACAF,GAAA,EACAC,GAAA,EACAK,GACAX,IAAAH,EACAM,KAAAD,EACAU,KAAAJ,EACAC,YAAAA,EACAJ,aAAAK,EAyDA,OAAAC,GCrEAE,EAAA,cAAAC,QAAAC,OAAA,WAAA,YAAA,iBAAA,gBAAA,gCACAC,SAAA,kBAAA,WAAA,WACAC,QAAA,kBAAA,KAAA,SAAAC,GACA,OACAC,YAAA,WACA,GAAAC,GAAAF,EAAAG,OAWA,OAVAC,UAAAC,KAAAJ,cACAlB,KAAA,SAAAhB,GACAuC,SAAAvC,EAAAwC,KACAL,EAAAM,SAAA,GAEAN,EAAAM,QAAAzC,EAAAwC,OAEA,SAAAE,GACAP,EAAAQ,WAEAR,EAAAS,aAIAC,QAAA,gBAAA,SAAAC,GACAA,EAAAC,SAAAC,QAAAjC,MACA+B,EAAAC,SAAAC,QAAAjC,QAEA+B,EAAAC,SAAAC,QAAA9B,OACA4B,EAAAC,SAAAC,QAAA9B,SAEA4B,EAAAC,SAAAC,QAAA9B,KAAA,qBAAA4B,EAAAC,SAAAC,QAAAjC,IAAA,qBAAA,gCACA+B,EAAAC,SAAAC,QAAA9B,KAAA,iBAAA4B,EAAAC,SAAAC,QAAAjC,IAAA,iBAAA,WACA+B,EAAAC,SAAAC,QAAA9B,KAAA,OAAA4B,EAAAC,SAAAC,QAAAjC,IAAA,OAAA,cD7BAc,QAAAC,OAAA,WAAAE,QAAA,iBAAA,QAAAnC","file":"../app.js","sourcesContent":["angular.module('micupon').factory('globalService', ['$http',globalService]);\r\n\r\nfunction globalService($http) {\r\n    var successMessage = '';\r\n    var loadText = '';\r\n    var blockActions = false;\r\n    var waiting = false;\r\n    var service = {\r\n        get: doGet,\r\n        post: doPost,\r\n        wait: isWaiting,\r\n        loadingText: loadingText,\r\n        blockActions: isBlocked\r\n    };\r\n    function manageSuccess(response){\r\n        dismissWait();\r\n        if(successMessage != \"\"){showNot(successMessage,'success');}\r\n        return response.data;\r\n    }\r\n    function manageError(response,a,b){\r\n        dismissWait();\r\n        if(response.status != 200){\r\n            if(response.status == 999){\r\n                location.href = '/login';\r\n                dismissWait();\r\n                return;\r\n            }\r\n            var msg;\r\n            if(response.status == 406){\r\n                msg = response.data;\r\n            }else{\r\n                msg = \"Ocurrio un error inesperado.\";\r\n            }\r\n            showNot(msg,'danger');\r\n        }\r\n    }\r\n    function doGet(url,msg,successMessage){\r\n        showWait(!msg ? 'Procesando...':msg);\r\n        successMessage = \"\";\r\n        if(successMessage){successMessage = successMessage;}\r\n        return $http.get(url).then(manageSuccess,manageError);\r\n    }\r\n    function doPost(url,data,msg,successMessage){\r\n        showWait(!msg ? 'Procesando...':msg);\r\n        successMessage = \"\";\r\n        if(successMessage){successMessage = successMessage;}\r\n        return $http.post(url,data).then(manageSuccess,manageError);\r\n    }\r\n\r\n    function showWait(text){\r\n        blockActions = true;\r\n        waiting = true;\r\n        loadText = text;\r\n    }\r\n\r\n    function dismissWait(){\r\n        waiting = false;\r\n        blockActions = false;\r\n    }\r\n    function isWaiting(){\r\n        return waiting;\r\n    }\r\n    function loadingText(){\r\n        return loadText;\r\n    }\r\n    function isBlocked(){\r\n        return blockActions;\r\n    }\r\n\r\n    return service;\r\n}","$(function() {\r\n    /*lang = {\r\n        \"sProcessing\": \"Procesando...\",\r\n        \"sLengthMenu\": \"Mostrar _MENU_ registros\",\r\n        \"sZeroRecords\": \"No se encontraron resultados\",\r\n        \"sEmptyTable\": \"Ningún dato disponible en esta tabla\",\r\n        \"sInfo\": \"_START_ - _END_ (Total: _TOTAL_)\",\r\n        \"sInfoEmpty\": \"\",\r\n        \"sInfoFiltered\": \"(filtrado de un total de _MAX_ registros)\",\r\n        \"sInfoPostFix\": \"\",\r\n        \"sSearch\": \"Buscar:\",\r\n        \"sUrl\": \"\",\r\n        \"sInfoThousands\": \",\",\r\n        \"sLoadingRecords\": \"Cargando...\",\r\n        \"oPaginate\": {\r\n            \"sFirst\": \"Primero\",\r\n            \"sLast\": \"Último\",\r\n            \"sNext\": \">>\",\r\n            \"sPrevious\": \"<<\"\r\n        },\r\n        \"oAria\": {\r\n            \"sSortAscending\": \": Activar para ordenar la columna de manera ascendente\",\r\n            \"sSortDescending\": \": Activar para ordenar la columna de manera descendente\"\r\n        }\r\n    };\r\n    if ($.fn.dataTable) {\r\n        $.extend($.fn.dataTable.defaults, {\r\n            \"lengthChange\": false,\r\n            language: lang,\r\n            filter: false\r\n        });\r\n    }\r\n    moment.locale('es');\r\n    $.material.init();\r\n    $('[data-toggle=\"tooltip\"]').tooltip();*/\r\n});"]}