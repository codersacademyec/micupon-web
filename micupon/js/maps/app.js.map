{"version":3,"sources":["globalService.js","main.js"],"names":["globalService","$http","contextPath","manageSuccess","response","dismissWait","successMessage","showNot","data","manageError","a","b","status","location","href","msg","doGet","url","showWait","get","then","doPost","post","text","blockActions","waiting","loadText","isWaiting","loadingText","isBlocked","service","wait","$","angular","module","constant","config","$httpProvider","defaults","headers","factory"],"mappings":"AAEA,QAAAA,eAAAC,EAAAC,GAYA,QAAAC,GAAAC,GAGA,MAFAC,KACA,IAAAC,GAAAC,QAAAD,EAAA,WACAF,EAAAI,KAEA,QAAAC,GAAAL,EAAAM,EAAAC,GAEA,GADAN,IACA,KAAAD,EAAAQ,OAAA,CACA,GAAA,KAAAR,EAAAQ,OAGA,MAFAC,UAAAC,KAAAZ,EAAA,aACAG,IAGA,IAAAU,EACA,IAAA,KAAAX,EAAAQ,OACA,GAAAG,GAAAX,EAAAI,SAEA,IAAAO,GAAA,8BAEAR,SAAAQ,EAAA,WAGA,QAAAC,GAAAC,EAAAF,EAAAT,GAIA,MAHAY,GAAAH,EAAAA,EAAA,iBACAT,EAAA,GACAA,IAAAA,EAAAA,GACAL,EAAAkB,IAAAF,GAAAG,KAAAjB,EAAAM,GAEA,QAAAY,GAAAJ,EAAAT,EAAAO,EAAAT,GAIA,MAHAY,GAAAH,EAAAA,EAAA,iBACAT,EAAA,GACAA,IAAAA,EAAAA,GACAL,EAAAqB,KAAAL,EAAAT,GAAAY,KAAAjB,EAAAM,GAGA,QAAAS,GAAAK,GACAC,GAAA,EACAC,GAAA,EACAC,EAAAH,EAGA,QAAAlB,KACAoB,GAAA,EACAD,GAAA,EAEA,QAAAG,KACA,MAAAF,GAEA,QAAAG,KACA,MAAAF,GAEA,QAAAG,KACA,MAAAL,GA/DA,GAAAlB,GAAA,GACAoB,EAAA,GACAF,GAAA,EACAC,GAAA,EACAK,GACAX,IAAAH,EACAM,KAAAD,EACAU,KAAAJ,EACAC,YAAAA,EACAJ,aAAAK,EAyDA,OAAAC,GCrEAE,EAAA,cAAAC,QAAAC,OAAA,WAAA,YAAA,iBAAA,gBAAA,gCACAC,SAAA,cAAA,UACAC,QAAA,gBAAA,SAAAC,GACAA,EAAAC,SAAAC,QAAApB,MACAkB,EAAAC,SAAAC,QAAApB,QAEAkB,EAAAC,SAAAC,QAAAjB,OACAe,EAAAC,SAAAC,QAAAjB,SAEAe,EAAAC,SAAAC,QAAAjB,KAAA,qBAAAe,EAAAC,SAAAC,QAAApB,IAAA,qBAAA,gCACAkB,EAAAC,SAAAC,QAAAjB,KAAA,iBAAAe,EAAAC,SAAAC,QAAApB,IAAA,iBAAA,WACAkB,EAAAC,SAAAC,QAAAjB,KAAA,OAAAe,EAAAC,SAAAC,QAAApB,IAAA,OAAA,cDXAc,QAAAC,OAAA,WAAAM,QAAA,iBAAA,QAAA,cAAAxC","file":"../app.js","sourcesContent":["angular.module('micupon').factory('globalService', ['$http','contextPath',globalService]);\n\nfunction globalService($http,contextPath) {\n    var successMessage = '';\n    var loadText = '';\n    var blockActions = false;\n    var waiting = false;\n    var service = {\n        get: doGet,\n        post: doPost,\n        wait: isWaiting,\n        loadingText: loadingText,\n        blockActions: isBlocked\n    };\n    function manageSuccess(response){\n        dismissWait();\n        if(successMessage != \"\"){showNot(successMessage,'success');}\n        return response.data;\n    }\n    function manageError(response,a,b){\n        dismissWait();\n        if(response.status != 200){\n            if(response.status == 999){\n                location.href = contextPath+'/login';\n                dismissWait();\n                return;\n            }\n            var msg;\n            if(response.status == 406){\n                var msg = response.data;\n            }else{\n                var msg = \"Ocurrio un error inesperado.\";\n            }\n            showNot(msg,'danger');\n        }\n    }\n    function doGet(url,msg,successMessage){\n        showWait(!msg ? 'Procesando...':msg);\n        successMessage = \"\";\n        if(successMessage){successMessage = successMessage;}\n        return $http.get(url).then(manageSuccess,manageError);\n    }\n    function doPost(url,data,msg,successMessage){\n        showWait(!msg ? 'Procesando...':msg);\n        successMessage = \"\";\n        if(successMessage){successMessage = successMessage;}\n        return $http.post(url,data).then(manageSuccess,manageError);\n    }\n\n    function showWait(text){\n        blockActions = true;\n        waiting = true;\n        loadText = text;\n    }\n\n    function dismissWait(){\n        waiting = false;\n        blockActions = false;\n    }\n    function isWaiting(){\n        return waiting;\n    }\n    function loadingText(){\n        return loadText;\n    }\n    function isBlocked(){\n        return blockActions;\n    }\n\n    return service;\n}","$(function() {\n    /*lang = {\n        \"sProcessing\": \"Procesando...\",\n        \"sLengthMenu\": \"Mostrar _MENU_ registros\",\n        \"sZeroRecords\": \"No se encontraron resultados\",\n        \"sEmptyTable\": \"Ningún dato disponible en esta tabla\",\n        \"sInfo\": \"_START_ - _END_ (Total: _TOTAL_)\",\n        \"sInfoEmpty\": \"\",\n        \"sInfoFiltered\": \"(filtrado de un total de _MAX_ registros)\",\n        \"sInfoPostFix\": \"\",\n        \"sSearch\": \"Buscar:\",\n        \"sUrl\": \"\",\n        \"sInfoThousands\": \",\",\n        \"sLoadingRecords\": \"Cargando...\",\n        \"oPaginate\": {\n            \"sFirst\": \"Primero\",\n            \"sLast\": \"Último\",\n            \"sNext\": \">>\",\n            \"sPrevious\": \"<<\"\n        },\n        \"oAria\": {\n            \"sSortAscending\": \": Activar para ordenar la columna de manera ascendente\",\n            \"sSortDescending\": \": Activar para ordenar la columna de manera descendente\"\n        }\n    };\n    if ($.fn.dataTable) {\n        $.extend($.fn.dataTable.defaults, {\n            \"lengthChange\": false,\n            language: lang,\n            filter: false\n        });\n    }\n    moment.locale('es');\n    $.material.init();\n    $('[data-toggle=\"tooltip\"]').tooltip();*/\n});"]}