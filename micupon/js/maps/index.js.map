{"version":3,"sources":["indexService.js","indexCtrl.js"],"names":["indexService","globalService","socialProvider","login","i","Stamplay","User","socialLogin","getItems","filter","user","Object","get","then","res","data","cupones","length","cupon","flag","usuario","_id","response","j","k","codigos","err","push","console","log","updateItem","item","patch","deleteItem","remove","saveItem","codeId","notificaciones","save","sendPush","perfil","push_token","addAlert","service","busqueda","modificar","eliminar","nuevo","indexCtrl","$scope","$rootScope","AccountService","$modal","vm","this","showFiltros","showNuevo","filtros","itemSeleccionado","currentUser","owner","buscar","modalEliminar","scope","template","html","show","animation","tableConfig","itemsPerPage","fillLastPage","ingresar","ocultarSide","$apply","$promise","confirmarElim","hide","guardar","$","modal","limpiarFiltros","angular","module","factory","controller"],"mappings":"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","file":"../index.js","sourcesContent":["angular.module('micupon').factory('indexService', ['globalService','socialProvider',indexService]);\r\n\r\nfunction indexService(globalService,socialProvider) {\r\n    var service = {\r\n        busqueda: getItems,\r\n        modificar: updateItem,\r\n        eliminar: deleteItem,\r\n        nuevo: saveItem,\r\n        login: login\r\n    };\r\n\r\n    return service;\r\n    function login(i){\r\n        Stamplay.User.socialLogin(socialProvider[i]);    \r\n    }\r\n    \r\n    function getItems(filter, user) {  //TODO VER PORQUE CONSULTA PRIMERO Y LUEGO VERIFICA SI EL USER ESTÁ LOGUEADO - HACE QUE NUNCA LLEGUE EL USER Y SE PUEDAN DESHABILITAR LOS CUPONES ENVIADOS\r\n        \r\n        /*var codeblock = new Stamplay.Codeblock(\"cuponespersonas\");\r\n        var data = {user : user, filtro: filter};\r\n\r\n        codeblock.run(data, {}, function (err, response) {\r\n            if(response.length > 0){\r\n                console.log(response);\r\n                return response;\r\n            }else if (err != null) {                        \r\n                console.log(err);\r\n                return null;\r\n            }\r\n        });*/\r\n\r\n\r\n        return Stamplay.Object(\"cupones\").get(filter)\r\n        .then(function(res) {\r\n                if(res.data){\r\n                    cupones = [];                    \r\n                    for (var i = res.data.length - 1; i >= 0; i--) {\r\n                        cupon = res.data[i]; // tomamos el cupon\r\n                        cupon.flag = false; // seteamos que sea editable\r\n                        if(user){ // si hay usuario logueado\r\n                            Stamplay.Object(\"cupones_usuarios\").get({usuario:user._id}) // buscamos los codigos que tiene enviados el usuario\r\n                            .then(function(response) {\r\n                                if(response){\r\n                                    for (var j = response.data.length - 1; j >= 0; j--) {\r\n                                       for (var k = response.data[j].codigos.length - 1; k >= 0; k--) {\r\n                                           if(cupon._id == response.data[j].codigos[k]){ // si alguno de los codigos que vienen ya fue enviado para el usuario, lo deshabilitamos\r\n                                            cupon.flag = true; // seteamos que no sea editable porque ya se envió este cupon\r\n                                        }\r\n                                       }                                       \r\n                                    } \r\n                                }                          \r\n                            }, function(err) {\r\n                                // TODO MOSTRAR ERROR\r\n                            })\r\n                        } \r\n                        cupones.push(cupon); // agregamos el cupon modificado\r\n                    }\r\n                }\r\n                res.data = cupones; // pisamos los cupones\r\n                return res.data;\r\n\r\n            }, function(err) {\r\n                // TODO MOSTRAR ERROR\r\n              console.log(err);\r\n        });\r\n    }\r\n\r\n    function updateItem(item){\r\n       Stamplay.Object(\"cupones\").patch(\"codigo\",item)\r\n        .then(function(res) {\r\n          // success\r\n        }, function(err) {\r\n            console.log(err);\r\n        }) \r\n    }\r\n\r\n    function deleteItem(item){\r\n       Stamplay.Object(\"cupones\").remove(\"codigo\")\r\n        .then(function(response) {\r\n            // success\r\n        }, function(err) {\r\n           console.log(err);\r\n        }) \r\n    }\r\n\r\n    function saveItem(codeId, user){\r\n        Stamplay.Object(\"cupones_usuarios\").get({usuario:user._id}) // buscamos codigos enviados del usuario\r\n        .then(function(response) {\r\n            if(response && response.length > 0){ // si hay registro para el usuario\r\n                response.codigos.push(codeId); // agregamos uno más a la lista de codigos\r\n                Stamplay.Object(\"cupones_usuarios\").patch(response._id,{codigos:response.codigos}) // actualizamos los codigos enviados del usuario\r\n                .then(function(res) {\r\n                    notificaciones(user);\r\n                }, function(err) {\r\n                   console.log(err);\r\n                }) \r\n            }else{\r\n                var data = {usuario:[user._id], codigos:[codeId]};\r\n                Stamplay.Object(\"cupones_usuarios\").save(data) // creamos un registro para el usuario en cupones_usuario\r\n                .then(function(res) {\r\n                    notificaciones(user);\r\n                }, function(err) {\r\n                    console.log(err);\r\n                }) \r\n            }\r\n        }, function(err) {\r\n            console.log(err);\r\n        })      \r\n    }\r\n\r\n    function notificaciones(user){\r\n        globalService.sendPush(user.perfil.push_token,'El cupón ha sido enviado a su movil.'); // enviamos la notificación push\r\n        addAlert(); // mostramos mensaje en pantalla\r\n    }\r\n    \r\n}","angular.module('micupon').controller('indexCtrl', ['$scope', '$rootScope', 'globalService', 'indexService', 'AccountService', '$modal', indexCtrl]);\r\n\r\nfunction indexCtrl($scope, $rootScope, globalService, indexService, AccountService, $modal) {\r\n    var vm = this;\r\n    vm.globalService = globalService;\r\n    vm.cupones = [];\r\n    vm.showFiltros = false;\r\n    vm.showNuevo = false;\r\n    vm.filtros = {};\r\n    vm.nuevo = {};\r\n    vm.itemSeleccionado = {};\r\n \r\n\r\n    AccountService.currentUser()\r\n        .then(function(user) {\r\n            if (user || $rootScope.user) {\r\n                $rootScope.user = user ? user : $rootScope.user;\r\n                Stamplay.Object(\"usuarios\").get({owner: $rootScope.user._id})\r\n                    .then(function(res) {\r\n                        $rootScope.user.perfil = res.data[0];\r\n                    }, function(err) {\r\n                        console.log(err);\r\n                    })\r\n            }\r\n\t\t\tvm.buscar();       \r\n        });\r\n\r\n    vm.modalEliminar = $modal({\r\n        scope: $scope,\r\n        template: '<div class=\"modal\"><div class=\"modal-dialog\" role=\"document\"><div class=\"modal-content\"><div class=\"modal-header\"><h4 class=\"modal-title\">Eliminar la banda horaria con id {{ctrl.bandaSeleccionada.id}}?</h4></div><div class=\"modal-footer\"><button type=\"button\" class=\"btn btn-default\" ng-click=\"$hide()\">Cancelar</button><button type=\"button\" class=\"btn btn-danger\" ng-click=\"ctrl.confirmarElim()\">Eliminar</button></div></div></div></div>',\r\n        html: true,\r\n        show: false,\r\n        animation: 'am-slide-top'\r\n    });\r\n\r\n    vm.tableConfig = {\r\n        itemsPerPage: 5,\r\n        fillLastPage: true\r\n    };\r\n\r\n    vm.ingresar = function(i) {\r\n        indexService.login(i);\r\n    };\r\n\r\n    vm.ocultarSide = function() {\r\n        vm.showFiltros = false;\r\n        vm.showNuevo = false;\r\n    };\r\n\r\n    vm.buscar = function() {\r\n        indexService.busqueda(vm.filtros, $rootScope.user).then(function(data) {\r\n            vm.cupones = data;\r\n            vm.showFiltros = false;\r\n            $scope.$apply();\r\n        });\r\n    };\r\n\r\n    vm.eliminar = function(item) {\r\n        vm.itemSeleccionado = item;\r\n        vm.modalEliminar.$promise.then(vm.modalEliminar.show);\r\n    };\r\n\r\n    vm.confirmarElim = function() {\r\n        indexService.eliminar(vm.itemSeleccionado).then(function(data) {\r\n            vm.modalEliminar.$promise.then(vm.modalEliminar.hide);\r\n        });\r\n    };\r\n\r\n    vm.guardar = function(item) {\r\n        if(!$rootScope.user){\r\n            $('#login-dialog').modal();\r\n        }\r\n        else{\r\n            indexService.nuevo(item,$rootScope.user);\r\n        }\r\n    };\r\n\r\n    vm.limpiarFiltros = function() {\r\n        vm.filtros = {};\r\n    };\r\n    \r\n}"]}